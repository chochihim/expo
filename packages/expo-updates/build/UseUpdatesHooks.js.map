{"version":3,"file":"UseUpdatesHooks.js","sourceRoot":"","sources":["../src/UseUpdatesHooks.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAE1C,OAAO,EAAE,qBAAqB,EAAE,MAAM,kBAAkB,CAAC;AAGzD;;GAEG;AACH,MAAM,CAAC,MAAM,wBAAwB,GAAG,CAAC,QAAkD,EAAE,EAAE;IAC7F,2CAA2C;IAC3C,MAAM,WAAW,GAAG,MAAM,EAAmB,CAAC;IAE9C,SAAS,CAAC,GAAG,EAAE;QACb,WAAW,CAAC,OAAO,GAAG,QAAQ,CAAC;IACjC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEf,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,WAAW,CAAC,OAAO,EAAE;YACvB,MAAM,YAAY,GAAG,qBAAqB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAChE,OAAO,GAAG,EAAE;gBACV,YAAY,CAAC,MAAM,EAAE,CAAC;YACxB,CAAC,CAAC;SACH;QACD,OAAO,SAAS,CAAC;IACnB,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC,CAAC","sourcesContent":["import { useEffect, useRef } from 'react';\n\nimport { addUseUpdatesListener } from './UpdatesEmitter';\nimport type { UseUpdatesInternalEvent } from './UseUpdates.types';\n\n/**\n * @hidden\n */\nexport const useUpdatesInternalEvents = (listener: (event: UseUpdatesInternalEvent) => void) => {\n  // Used internally by the useUpdates() hook\n  const listenerRef = useRef<typeof listener>();\n\n  useEffect(() => {\n    listenerRef.current = listener;\n  }, [listener]);\n\n  useEffect(() => {\n    if (listenerRef.current) {\n      const subscription = addUseUpdatesListener(listenerRef.current);\n      return () => {\n        subscription.remove();\n      };\n    }\n    return undefined;\n  }, []);\n};\n"]}